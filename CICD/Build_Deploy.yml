trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'python-api'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

- task: AzureCLI@2
  displayName: 'Get AKS credentials'
  inputs:
    azureSubscription: 'aks-sc'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr login --name appcer
      cd $(Build.SourcesDirectory)/CICD
      ls -l  # ðŸ‘ˆ sanity check
      docker build -t appcer.azurecr.io/myapp:latest2 .
      docker push appcer.azurecr.io/myapp:latest2

 

- task: AzureCLI@2
  displayName: 'Get AKS credentials'
  inputs:
    azureSubscription: 'aks-sc'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials --resource-group randomapp-rg --name aks-cluster --overwrite-existing --file kubeconfig

# - task: Kubernetes@1
#   displayName: 'Deploy to AKS'
#   inputs:
#     connectionType: 'None'
#     command: apply
#     useConfigurationFile: true
#     configuration: 'CICD/deployment.yml'
- task: Kubernetes@1
  displayName: 'Deploy to AKS'
  inputs:
    connectionType: 'Kubernetes Service Connection'
    kubernetesServiceEndpoint: 'kube-sc'
    command: 'apply'
    useConfigurationFile: true
    configuration: 'CICD/deployment.yml'


