name: Terraform AKS Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select environment to deploy"
        required: true
        default: "d"
        type: choice
        options:
          - d
          - t
          - a
          - p

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: vpps-${{ github.event.inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Azure login using Service Principal credentials
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Export GitHub Variables / Secrets as TF_VARs
        run: |
          echo "TF_VAR_subscription_id=${{ vars.SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_location=${{ vars.LOCATION }}" >> $GITHUB_ENV
          echo "TF_VAR_aks_cluster_name=${{ vars.AKS_CLUSTER_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_subnet_id=${{ vars.SUBNET_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_acr_name=${{ vars.ACR_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_windows_admin_username=${{ vars.WINDOWS_ADMIN_USERNAME }}" >> $GITHUB_ENV
          echo "TF_VAR_windows_admin_password=${{ secrets.WINDOWS_ADMIN_PASSWORD }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Import existing AKS cluster if missing
        run: |
          if ! terraform state list | grep -q '^azurerm_kubernetes_cluster\.aks$'; then
            terraform import azurerm_kubernetes_cluster.aks /subscriptions/20e67141-3faf-491a-bb15-d9df98bb8021/resourceGroups/sa-rg/providers/Microsoft.ContainerService/managedClusters/mmt-aks
          else
            echo "AKS cluster already in state, skipping import."
          fi

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -input=false -auto-approve tfplan
